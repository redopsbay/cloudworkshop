<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jenkins on Cloud Workshop</title><link>https://cloudworkshop.redopsbay.dev/cicd/jenkins/</link><description>Recent content in Jenkins on Cloud Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://cloudworkshop.redopsbay.dev/cicd/jenkins/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Jenkins</title><link>https://cloudworkshop.redopsbay.dev/cicd/jenkins/01-introductiontojenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudworkshop.redopsbay.dev/cicd/jenkins/01-introductiontojenkins/</guid><description>What is Jenkins? Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.
Jenkins can be installed through native system packages, Docker, or even run standalone by any machine with a Java Runtime Environment (JRE) installed.
It also allow you to automate your deployment starting from lower environment such as:
graph LR; A[DEV] --> B(QA) --> C[STAGING] --> D[PROD] It allows you to define / create scripts by using Groovy Scripts to create logical workflow that you would use to automate your build / testing / delivery or deployment.</description></item><item><title>Jenkins Setup Docker Compose</title><link>https://cloudworkshop.redopsbay.dev/cicd/jenkins/02-jenkinssetupdocker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudworkshop.redopsbay.dev/cicd/jenkins/02-jenkinssetupdocker/</guid><description>For local development, we can use jenkins thru docker-compose to quickly fire up our Jenkins Server.
Will use the latest nginx:alpine and jenkins/jenkins:lts lts image as it&amp;rsquo;s latest version.
In real world, it is not recommended to run jenkins without a reverse proxy due to the limitations of it&amp;rsquo;s web server configuration, but it doesn&amp;rsquo;t mean that it would not work. But it will leave your jenkins server VULNERABLE and prone to error.</description></item><item><title>Jenkins Setup on Kubernetes</title><link>https://cloudworkshop.redopsbay.dev/cicd/jenkins/03-jenkinssetupk8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudworkshop.redopsbay.dev/cicd/jenkins/03-jenkinssetupk8s/</guid><description>For quick deployment, we can deploy jenkins server thru kubernetes cluster.
We will use the latest jenkins-controller jenkins/jenkins:lts as lts image version.
Do not use in production. If you want a production grade deployment. Kindly, refer to this repository https://github.com/jenkinsci/helm-charts
It is fairly recommended to plan ahead the sustainability of the Jenkins Server deployment. As systems like Jenkins which is not designed to be scalable is highly prone to fail.</description></item><item><title>Jenkins Setup on AWS EC2 Instance</title><link>https://cloudworkshop.redopsbay.dev/cicd/jenkins/04-jenkinssetupec2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudworkshop.redopsbay.dev/cicd/jenkins/04-jenkinssetupec2/</guid><description>Architecture The provisioning process will incur costs and do not use following configuration for production setup.
Prerequisites Personal AWS Account AWS EC2 &amp;amp; VPC access Below are the following AWS resources to be created during provisioning process.
AWS Resources
Type Description EC2 AWS EC2 Instance t3.medium (Jenkins Server) EC2 AWS EC2 Instance t3.small (Jenkins Slave) EBS Root Volume 50GB gp3 for Jenkins Server EBS Root Volume 50GB gp3 for Jenkins Slave Public IP Dynamic Public ip address for Jenkins Server Public IP Dynamic Public ip address for Jenkins Slave Security Group jenkins-server-cloud-workshop allow ports 80/443/22 Security Group jenkins-slave-cloud-workshop allow ports 22 Key Pair RSA Algorithm for SSH connection Tools Used for this workshop</description></item></channel></rss>