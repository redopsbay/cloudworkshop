<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps Workshop</title><link>https://devops.redopsbay.dev/</link><description>Recent content on DevOps Workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://devops.redopsbay.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>API development with traefik &amp; docker</title><link>https://devops.redopsbay.dev/reverse-proxy/api-development-with-traefik-and-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/reverse-proxy/api-development-with-traefik-and-docker/</guid><description>The Problem ðŸ¤¯ You have multiple docker or container services running on a single machine that uses same port during your development, and how will you run all this containers all at once without changing the port numbers?
Of course you can run it through docker using the parameters -p 8080:8080 and -p 9090:8080.
But it&amp;rsquo;s painful everytime you will run it since you will have to change each port on your localhost.</description></item><item><title>Contributors</title><link>https://devops.redopsbay.dev/about/contributors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/about/contributors/</guid><description>Contributors ðŸš§</description></item><item><title>Introduction to Jenkins</title><link>https://devops.redopsbay.dev/cicd/jenkins/introductiontojenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/cicd/jenkins/introductiontojenkins/</guid><description>What is Jenkins? Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.
Jenkins can be installed through native system packages, Docker, or even run standalone by any machine with a Java Runtime Environment (JRE) installed.
It also allow you to automate your deployment starting from lower environment such as:
dev qa staging pre-prod prod etc It allows you to define / create scripts by using Groovy Scripts to create logical workflow that you would use to automate your build / testing / delivery or deployment.</description></item><item><title>Quick Introduction To DevOps</title><link>https://devops.redopsbay.dev/about/quick-intro-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/about/quick-intro-01/</guid><description>What is DevOps? According to GitLab, &amp;ldquo;DevOps combines development (Dev) and operations (Ops) to increase the efficiency, speed, and security of software development and delivery compared to traditional processes. A more nimble software development lifecycle results in a competitive advantage for businesses and their customers&amp;rdquo;
Common misconceptions about DevOps One of the most common misconceptions is that DevOps is a specific job title or position within a business enterprise. In truth, DevOps is not a job title.</description></item><item><title>Jenkins Setup Docker Compose</title><link>https://devops.redopsbay.dev/cicd/jenkins/jenkinssetupdocker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/cicd/jenkins/jenkinssetupdocker/</guid><description>Firing up Jenkins thru Docker Compose ðŸš€ For local development, we can use jenkins thru docker-compose to quickly fire up our Jenkins Server.
Will use the latest nginx:alpine and jenkins/jenkins:lts lts image as it&amp;rsquo;s latest version.
In real world, it is not recommended to run jenkins without a reverse proxy due to the limitations of it&amp;rsquo;s web server configuration, but it doesn&amp;rsquo;t mean that it would not work. But it will leave your jenkins server VULNERABLE and prone to error.</description></item><item><title>Jenkins Setup on Kubernetes</title><link>https://devops.redopsbay.dev/cicd/jenkins/jenkinssetupk8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://devops.redopsbay.dev/cicd/jenkins/jenkinssetupk8s/</guid><description>Jenkins Up &amp;amp; Running on K8s ðŸš€ For quick deployment, we can deploy jenkins server thru kubernetes cluster.
We will use the latest jenkins-controller jenkins/jenkins:lts as lts image version.
Note: Do not use in production
Let&amp;rsquo;s create a namespace.yaml file: apiVersion: v1 kind: Namespace metadata: name: jenkins-controller then apply it thru:
kubectl apply -f namespace.yaml Next, let&amp;rsquo;s create rbac-and-serviceaccount.yaml file: --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: jenkins-admin rules: - apiGroups: [&amp;#34;&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;*&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: jenkins-admin namespace: jenkins-controller --- apiVersion: rbac.</description></item></channel></rss>